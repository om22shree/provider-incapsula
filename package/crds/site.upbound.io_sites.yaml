---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: sites.site.upbound.io
spec:
  group: site.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - incapsula
    kind: Site
    listKind: SiteList
    plural: sites
    singular: site
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Site is the Schema for the Sites API. Provides a Incapsula Site
          resource.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SiteSpec defines the desired state of Site
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  accelerationLevel:
                    description: Sets the acceleration level of the site. Options
                      are none, standard, and aggressive. none | standard | aggressive.
                    type: string
                  accountId:
                    description: The account to operate on. If not specified, operation
                      will be performed on the account identified by the authentication
                      parameters. Numeric identifier of the account to operate on.
                      If not specified, operation will be performed on the account
                      identified by the authentication parameters.
                    type: number
                  active:
                    description: Whether the site is active or bypassed by the Imperva
                      network. Options are active and bypass. active or bypass.
                    type: string
                  approver:
                    description: Sets the approver e-mail address that will be used
                      to perform SSL domain validation. my.approver@email.com (some
                      approver email address).
                    type: string
                  dataStorageRegion:
                    description: The data region to use. Options are APAC, AU, EU,
                      and US. The data region to use. Options are `APAC`, `AU`, `EU`,
                      and `US`.
                    type: string
                  domain:
                    description: 'The fully qualified domain name of the site. For
                      example: www.example.com, hello.example.com. The fully qualified
                      domain name of the site. For example: www.example.com, hello.example.com.'
                    type: string
                  domainRedirectToFull:
                    description: Sets the redirect naked to full flag. Pass "true"
                      or empty string in the value parameter. true or empty string.
                    type: string
                  domainValidation:
                    description: Sets the domain validation method that will be used
                      to generate an SSL certificate. Options are email, html, cname
                      and dns. email or html or dns or cname.
                    type: string
                  forceSsl:
                    description: Force SSL. This option is only available for sites
                      with manually configured IP/CNAME and for specific accounts.
                      If this value is true, manually set the site to support SSL.
                      This option is only available for sites with manually configured
                      IP/CNAME and for specific accounts.
                    type: string
                  hashSalt:
                    description: Specify the hash salt (masking setting), required
                      if hashing is enabled. Maximum length of 64 characters. Specify
                      the hash salt (masking setting), required if hashing is enabled.
                      Maximum length of 64 characters.
                    type: string
                  hashingEnabled:
                    description: Specify if hashing (masking setting) should be enabled.
                      Specify if hashing (masking setting) should be enabled.
                    type: boolean
                  ignoreSsl:
                    description: Sets the ignore SSL flag (if the site is in pending-select-approver
                      state). Pass "true" or empty string in the value parameter.
                      true or empty string.
                    type: string
                  logLevel:
                    description: The log level. Options are full, security, and none.
                      The log level. Options are `full`, `security`, and `none`.
                    type: string
                  logsAccountId:
                    description: Account where logs should be stored. Available only
                      for Enterprise Plan customers that purchased the Logs Integration
                      SKU. Numeric identifier of the account that purchased the logs
                      integration SKU and which collects the logs. If not specified,
                      operation will be performed on the account identified by the
                      authentication parameters. Available only for Enterprise Plan
                      customers that purchased the Logs Integration SKU. Numeric identifier
                      of the account that purchased the logs integration SKU and which
                      collects the logs. If not specified, operation will be performed
                      on the account identified by the authentication parameters.
                    type: string
                  nakedDomainSan:
                    description: 'Use true to add the naked domain SAN to a www site’s
                      SSL certificate. Default value: true Use ''true'' to add the
                      naked domain SAN to a www site’s SSL certificate. Default value:
                      true'
                    type: boolean
                  perfClientComplyNoCache:
                    description: Comply with No-Cache and Max-Age directives in client
                      requests. By default, these cache directives are ignored. Resources
                      are dynamically profiled and re-configured to optimize performance.
                      Comply with No-Cache and Max-Age directives in client requests.
                      By default, these cache directives are ignored. Resources are
                      dynamically profiled and re-configured to optimize performance.
                    type: boolean
                  perfClientEnableClientSideCaching:
                    description: Cache content on client browsers or applications.
                      When not enabled, content is cached only on the Imperva proxies.
                      Cache content on client browsers or applications. When not enabled,
                      content is cached only on the Imperva proxies.
                    type: boolean
                  perfClientSendAgeHeader:
                    description: 'Send Cache-Control: max-age and Age headers. Send
                      Cache-Control: max-age and Age headers.'
                    type: boolean
                  perfKeyComplyVary:
                    description: Comply with Vary. Cache resources in accordance with
                      the Vary response header. Comply with Vary. Cache resources
                      in accordance with the Vary response header.
                    type: boolean
                  perfKeyUniteNakedFullCache:
                    description: Use the Same Cache for Full and Naked Domains. For
                      example, use the same cached resource for www.example.com/a
                      and example.com/a. Use the Same Cache for Full and Naked Domains.
                      For example, use the same cached resource for www.example.com/a
                      and example.com/a.
                    type: boolean
                  perfModeHttps:
                    description: The resources that are cached over HTTPS, the general
                      level applies. Options are disabled, dont_include_html, include_html,
                      and include_all_resources. The resources that are cached over
                      HTTPS, the general level applies. Options are `disabled`, `dont_include_html`,
                      `include_html`, and `include_all_resources`.
                    type: string
                  perfModeLevel:
                    description: Caching level. Options are disabled, custom_cache_rules_only,
                      standard, smart, and all_resources. Caching level. Options are
                      `disable`, `standard`, `smart`, and `all_resources`.
                    type: string
                  perfModeTime:
                    description: The time, in seconds, that you set for this option
                      determines how often the cache is refreshed. Relevant for the
                      include_html and include_all_resources levels only. The time,
                      in seconds, that you set for this option determines how often
                      the cache is refreshed. Relevant for the `include_html` and
                      `include_all_resources` levels only.
                    type: number
                  perfResponseCache300X:
                    description: When this option is checked Imperva will cache 301,
                      302, 303, 307, and 308 redirect response headers containing
                      the target URI. When this option is checked Imperva will cache
                      301, 302, 303, 307, and 308 redirect response headers containing
                      the target URI.
                    type: boolean
                  perfResponseCache404Enabled:
                    description: Whether or not to cache 404 responses. Whether or
                      not to cache 404 responses.
                    type: boolean
                  perfResponseCache404Time:
                    description: The time in seconds to cache 404 responses. Value
                      should be divisible by 60. The time in seconds to cache 404
                      responses.
                    type: number
                  perfResponseCacheEmptyResponses:
                    description: Cache responses that don’t have a message body. Cache
                      responses that don’t have a message body.
                    type: boolean
                  perfResponseCacheHttp10Responses:
                    description: Cache HTTP 1.0 type responses that don’t include
                      the Content-Length header or chunking. Cache HTTP 1.0 type responses
                      that don’t include the Content-Length header or chunking.
                    type: boolean
                  perfResponseCacheResponseHeaderMode:
                    description: The working mode for caching response headers. Options
                      are all and custom. The working mode for caching response headers.
                      Options are `all` and `custom`.
                    type: string
                  perfResponseCacheResponseHeaders:
                    description: 'An array of strings representing the response headers
                      to be cached when working in custom mode. If empty, no response
                      headers are cached. For example: ["Access-Control-Allow-Origin","Access-Control-Allow-Methods"].
                      An array of strings representing the response headers to be
                      cached when working in `custom` mode. If empty, no response
                      headers are cached.'
                    items:
                      type: string
                    type: array
                  perfResponseCacheShield:
                    description: Adds an intermediate cache between other Imperva
                      PoPs and your origin servers to protect your servers from redundant
                      requests. Adds an intermediate cache between other Imperva PoPs
                      and your origin servers to protect your servers from redundant
                      requests.
                    type: boolean
                  perfResponseStaleContentMode:
                    description: The working mode for serving stale content. Options
                      are disabled, adaptive, and custom. The working mode for serving
                      stale content. Options are `disabled`, `adaptive`, and `custom`.
                    type: string
                  perfResponseStaleContentTime:
                    description: The time, in seconds, to serve stale content for
                      when working in custom work mode. The time, in seconds, to serve
                      stale content for when working in `custom` work mode.
                    type: number
                  perfResponseTagResponseHeader:
                    description: Tag the response according to the value of this header.
                      Specify which origin response header contains the cache tags
                      in your resources. Tag the response according to the value of
                      this header. Specify which origin response header contains the
                      cache tags in your resources.
                    type: string
                  perfTtlPreferLastModified:
                    description: Prefer 'Last Modified' over eTag. When this option
                      is checked, Imperva prefers using Last Modified values (if available)
                      over eTag values (recommended on multi-server setups). Prefer
                      'Last Modified' over eTag. When this option is checked, Imperva
                      prefers using Last Modified values (if available) over eTag
                      values (recommended on multi-server setups).
                    type: boolean
                  perfTtlUseShortestCaching:
                    description: Use shortest caching duration in case of conflicts.
                      By default, the longest duration is used in case of conflict
                      between caching rules or modes. When this option is checked,
                      Imperva uses the shortest duration in case of conflict. Use
                      shortest caching duration in case of conflicts. By default,
                      the longest duration is used in case of conflict between caching
                      rules or modes. When this option is checked, Imperva uses the
                      shortest duration in case of conflict.
                    type: boolean
                  refId:
                    description: Unique identifier in the API for the site. Customer
                      specific identifier for this operation.
                    type: string
                  removeSsl:
                    description: Sets the remove SSL from site flag. Pass "true" or
                      empty string in the value parameter. true or empty string.
                    type: string
                  restrictedCnameReuse:
                    description: 'parameter is currently not supported. Please do
                      not use/change value. Use this option to allow Imperva to detect
                      and add domains that are using the Imperva-provided CNAME (not
                      recommended). One of: true | false'
                    type: string
                  sealLocation:
                    description: Sets the seal location. Options are api.seal_location.none,
                      api.seal_location.bottom_left, api.seal_location.right_bottom,
                      api.seal_location.left, and api.seal_location.right. api.seal_location.bottom_left
                      | api.seal_location.none | api.seal_location.right_bottom |
                      api.seal_location.right | api.seal_location.left | api.seal_location.bottom_right
                      | api.seal_location.bottom.
                    type: string
                  sendSiteSetupEmails:
                    description: If this value is false, end users will not get emails
                      about the add site process such as DNS instructions and SSL
                      setup. If this value is false, end users will not get emails
                      about the add site process such as DNS instructions and SSL
                      setup.
                    type: string
                  siteIp:
                    description: The web server IP/CNAME. This field should be specified
                      when creating a site and the domain does not yet exist or the
                      domain already points to Imperva Cloud. When specified, its
                      value will be used for adding site only. After site is already
                      created this field will be ignored. To modify site ip, please
                      use resource incapsula_data_centers_configuration instead. Manually
                      set the web server IP/CNAME.
                    type: string
                  wildcardSan:
                    description: 'Use true to add the wildcard SAN or false to add
                      the full domain SAN to the site’s SSL certificate. Default value:
                      true Use ''true'' to add the wildcard SAN or ''false'' to add
                      the full domain SAN to the site’s SSL certificate. Default value:
                      true'
                    type: boolean
                type: object
              initProvider:
                description: THIS IS A BETA FIELD. It will be honored unless the Management
                  Policies feature flag is disabled. InitProvider holds the same fields
                  as ForProvider, with the exception of Identifier and other resource
                  reference fields. The fields that are in InitProvider are merged
                  into ForProvider when the resource is created. The same fields are
                  also added to the terraform ignore_changes hook, to avoid updating
                  them after creation. This is useful for fields that are required
                  on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them,
                  like an autoscaler.
                properties:
                  accelerationLevel:
                    description: Sets the acceleration level of the site. Options
                      are none, standard, and aggressive. none | standard | aggressive.
                    type: string
                  accountId:
                    description: The account to operate on. If not specified, operation
                      will be performed on the account identified by the authentication
                      parameters. Numeric identifier of the account to operate on.
                      If not specified, operation will be performed on the account
                      identified by the authentication parameters.
                    type: number
                  active:
                    description: Whether the site is active or bypassed by the Imperva
                      network. Options are active and bypass. active or bypass.
                    type: string
                  approver:
                    description: Sets the approver e-mail address that will be used
                      to perform SSL domain validation. my.approver@email.com (some
                      approver email address).
                    type: string
                  dataStorageRegion:
                    description: The data region to use. Options are APAC, AU, EU,
                      and US. The data region to use. Options are `APAC`, `AU`, `EU`,
                      and `US`.
                    type: string
                  domain:
                    description: 'The fully qualified domain name of the site. For
                      example: www.example.com, hello.example.com. The fully qualified
                      domain name of the site. For example: www.example.com, hello.example.com.'
                    type: string
                  domainRedirectToFull:
                    description: Sets the redirect naked to full flag. Pass "true"
                      or empty string in the value parameter. true or empty string.
                    type: string
                  domainValidation:
                    description: Sets the domain validation method that will be used
                      to generate an SSL certificate. Options are email, html, cname
                      and dns. email or html or dns or cname.
                    type: string
                  forceSsl:
                    description: Force SSL. This option is only available for sites
                      with manually configured IP/CNAME and for specific accounts.
                      If this value is true, manually set the site to support SSL.
                      This option is only available for sites with manually configured
                      IP/CNAME and for specific accounts.
                    type: string
                  hashSalt:
                    description: Specify the hash salt (masking setting), required
                      if hashing is enabled. Maximum length of 64 characters. Specify
                      the hash salt (masking setting), required if hashing is enabled.
                      Maximum length of 64 characters.
                    type: string
                  hashingEnabled:
                    description: Specify if hashing (masking setting) should be enabled.
                      Specify if hashing (masking setting) should be enabled.
                    type: boolean
                  ignoreSsl:
                    description: Sets the ignore SSL flag (if the site is in pending-select-approver
                      state). Pass "true" or empty string in the value parameter.
                      true or empty string.
                    type: string
                  logLevel:
                    description: The log level. Options are full, security, and none.
                      The log level. Options are `full`, `security`, and `none`.
                    type: string
                  logsAccountId:
                    description: Account where logs should be stored. Available only
                      for Enterprise Plan customers that purchased the Logs Integration
                      SKU. Numeric identifier of the account that purchased the logs
                      integration SKU and which collects the logs. If not specified,
                      operation will be performed on the account identified by the
                      authentication parameters. Available only for Enterprise Plan
                      customers that purchased the Logs Integration SKU. Numeric identifier
                      of the account that purchased the logs integration SKU and which
                      collects the logs. If not specified, operation will be performed
                      on the account identified by the authentication parameters.
                    type: string
                  nakedDomainSan:
                    description: 'Use true to add the naked domain SAN to a www site’s
                      SSL certificate. Default value: true Use ''true'' to add the
                      naked domain SAN to a www site’s SSL certificate. Default value:
                      true'
                    type: boolean
                  perfClientComplyNoCache:
                    description: Comply with No-Cache and Max-Age directives in client
                      requests. By default, these cache directives are ignored. Resources
                      are dynamically profiled and re-configured to optimize performance.
                      Comply with No-Cache and Max-Age directives in client requests.
                      By default, these cache directives are ignored. Resources are
                      dynamically profiled and re-configured to optimize performance.
                    type: boolean
                  perfClientEnableClientSideCaching:
                    description: Cache content on client browsers or applications.
                      When not enabled, content is cached only on the Imperva proxies.
                      Cache content on client browsers or applications. When not enabled,
                      content is cached only on the Imperva proxies.
                    type: boolean
                  perfClientSendAgeHeader:
                    description: 'Send Cache-Control: max-age and Age headers. Send
                      Cache-Control: max-age and Age headers.'
                    type: boolean
                  perfKeyComplyVary:
                    description: Comply with Vary. Cache resources in accordance with
                      the Vary response header. Comply with Vary. Cache resources
                      in accordance with the Vary response header.
                    type: boolean
                  perfKeyUniteNakedFullCache:
                    description: Use the Same Cache for Full and Naked Domains. For
                      example, use the same cached resource for www.example.com/a
                      and example.com/a. Use the Same Cache for Full and Naked Domains.
                      For example, use the same cached resource for www.example.com/a
                      and example.com/a.
                    type: boolean
                  perfModeHttps:
                    description: The resources that are cached over HTTPS, the general
                      level applies. Options are disabled, dont_include_html, include_html,
                      and include_all_resources. The resources that are cached over
                      HTTPS, the general level applies. Options are `disabled`, `dont_include_html`,
                      `include_html`, and `include_all_resources`.
                    type: string
                  perfModeLevel:
                    description: Caching level. Options are disabled, custom_cache_rules_only,
                      standard, smart, and all_resources. Caching level. Options are
                      `disable`, `standard`, `smart`, and `all_resources`.
                    type: string
                  perfModeTime:
                    description: The time, in seconds, that you set for this option
                      determines how often the cache is refreshed. Relevant for the
                      include_html and include_all_resources levels only. The time,
                      in seconds, that you set for this option determines how often
                      the cache is refreshed. Relevant for the `include_html` and
                      `include_all_resources` levels only.
                    type: number
                  perfResponseCache300X:
                    description: When this option is checked Imperva will cache 301,
                      302, 303, 307, and 308 redirect response headers containing
                      the target URI. When this option is checked Imperva will cache
                      301, 302, 303, 307, and 308 redirect response headers containing
                      the target URI.
                    type: boolean
                  perfResponseCache404Enabled:
                    description: Whether or not to cache 404 responses. Whether or
                      not to cache 404 responses.
                    type: boolean
                  perfResponseCache404Time:
                    description: The time in seconds to cache 404 responses. Value
                      should be divisible by 60. The time in seconds to cache 404
                      responses.
                    type: number
                  perfResponseCacheEmptyResponses:
                    description: Cache responses that don’t have a message body. Cache
                      responses that don’t have a message body.
                    type: boolean
                  perfResponseCacheHttp10Responses:
                    description: Cache HTTP 1.0 type responses that don’t include
                      the Content-Length header or chunking. Cache HTTP 1.0 type responses
                      that don’t include the Content-Length header or chunking.
                    type: boolean
                  perfResponseCacheResponseHeaderMode:
                    description: The working mode for caching response headers. Options
                      are all and custom. The working mode for caching response headers.
                      Options are `all` and `custom`.
                    type: string
                  perfResponseCacheResponseHeaders:
                    description: 'An array of strings representing the response headers
                      to be cached when working in custom mode. If empty, no response
                      headers are cached. For example: ["Access-Control-Allow-Origin","Access-Control-Allow-Methods"].
                      An array of strings representing the response headers to be
                      cached when working in `custom` mode. If empty, no response
                      headers are cached.'
                    items:
                      type: string
                    type: array
                  perfResponseCacheShield:
                    description: Adds an intermediate cache between other Imperva
                      PoPs and your origin servers to protect your servers from redundant
                      requests. Adds an intermediate cache between other Imperva PoPs
                      and your origin servers to protect your servers from redundant
                      requests.
                    type: boolean
                  perfResponseStaleContentMode:
                    description: The working mode for serving stale content. Options
                      are disabled, adaptive, and custom. The working mode for serving
                      stale content. Options are `disabled`, `adaptive`, and `custom`.
                    type: string
                  perfResponseStaleContentTime:
                    description: The time, in seconds, to serve stale content for
                      when working in custom work mode. The time, in seconds, to serve
                      stale content for when working in `custom` work mode.
                    type: number
                  perfResponseTagResponseHeader:
                    description: Tag the response according to the value of this header.
                      Specify which origin response header contains the cache tags
                      in your resources. Tag the response according to the value of
                      this header. Specify which origin response header contains the
                      cache tags in your resources.
                    type: string
                  perfTtlPreferLastModified:
                    description: Prefer 'Last Modified' over eTag. When this option
                      is checked, Imperva prefers using Last Modified values (if available)
                      over eTag values (recommended on multi-server setups). Prefer
                      'Last Modified' over eTag. When this option is checked, Imperva
                      prefers using Last Modified values (if available) over eTag
                      values (recommended on multi-server setups).
                    type: boolean
                  perfTtlUseShortestCaching:
                    description: Use shortest caching duration in case of conflicts.
                      By default, the longest duration is used in case of conflict
                      between caching rules or modes. When this option is checked,
                      Imperva uses the shortest duration in case of conflict. Use
                      shortest caching duration in case of conflicts. By default,
                      the longest duration is used in case of conflict between caching
                      rules or modes. When this option is checked, Imperva uses the
                      shortest duration in case of conflict.
                    type: boolean
                  refId:
                    description: Unique identifier in the API for the site. Customer
                      specific identifier for this operation.
                    type: string
                  removeSsl:
                    description: Sets the remove SSL from site flag. Pass "true" or
                      empty string in the value parameter. true or empty string.
                    type: string
                  restrictedCnameReuse:
                    description: 'parameter is currently not supported. Please do
                      not use/change value. Use this option to allow Imperva to detect
                      and add domains that are using the Imperva-provided CNAME (not
                      recommended). One of: true | false'
                    type: string
                  sealLocation:
                    description: Sets the seal location. Options are api.seal_location.none,
                      api.seal_location.bottom_left, api.seal_location.right_bottom,
                      api.seal_location.left, and api.seal_location.right. api.seal_location.bottom_left
                      | api.seal_location.none | api.seal_location.right_bottom |
                      api.seal_location.right | api.seal_location.left | api.seal_location.bottom_right
                      | api.seal_location.bottom.
                    type: string
                  sendSiteSetupEmails:
                    description: If this value is false, end users will not get emails
                      about the add site process such as DNS instructions and SSL
                      setup. If this value is false, end users will not get emails
                      about the add site process such as DNS instructions and SSL
                      setup.
                    type: string
                  siteIp:
                    description: The web server IP/CNAME. This field should be specified
                      when creating a site and the domain does not yet exist or the
                      domain already points to Imperva Cloud. When specified, its
                      value will be used for adding site only. After site is already
                      created this field will be ignored. To modify site ip, please
                      use resource incapsula_data_centers_configuration instead. Manually
                      set the web server IP/CNAME.
                    type: string
                  wildcardSan:
                    description: 'Use true to add the wildcard SAN or false to add
                      the full domain SAN to the site’s SSL certificate. Default value:
                      true Use ''true'' to add the wildcard SAN or ''false'' to add
                      the full domain SAN to the site’s SSL certificate. Default value:
                      true'
                    type: boolean
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS A BETA FIELD. It is on by default but can be
                  opted out through a Crossplane feature flag. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.domain is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.domain)
                || (has(self.initProvider) && has(self.initProvider.domain))'
          status:
            description: SiteStatus defines the observed state of Site.
            properties:
              atProvider:
                properties:
                  accelerationLevel:
                    description: Sets the acceleration level of the site. Options
                      are none, standard, and aggressive. none | standard | aggressive.
                    type: string
                  accountId:
                    description: The account to operate on. If not specified, operation
                      will be performed on the account identified by the authentication
                      parameters. Numeric identifier of the account to operate on.
                      If not specified, operation will be performed on the account
                      identified by the authentication parameters.
                    type: number
                  active:
                    description: Whether the site is active or bypassed by the Imperva
                      network. Options are active and bypass. active or bypass.
                    type: string
                  approver:
                    description: Sets the approver e-mail address that will be used
                      to perform SSL domain validation. my.approver@email.com (some
                      approver email address).
                    type: string
                  dataStorageRegion:
                    description: The data region to use. Options are APAC, AU, EU,
                      and US. The data region to use. Options are `APAC`, `AU`, `EU`,
                      and `US`.
                    type: string
                  dnsARecordName:
                    description: The A record name. A record name.
                    type: string
                  dnsARecordValue:
                    description: The A record value. A record value.
                    items:
                      type: string
                    type: array
                  dnsCnameRecordName:
                    description: The CNAME record name. CNAME record name.
                    type: string
                  dnsCnameRecordValue:
                    description: The CNAME record value. CNAME record value.
                    type: string
                  dnsRecordName:
                    description: the DNS Record type TXT that should be created and
                      set to the domain_verification output value. The DNS Record
                      type TXT that should be created and set to the `domain_verification`
                      output value.
                    type: string
                  domain:
                    description: 'The fully qualified domain name of the site. For
                      example: www.example.com, hello.example.com. The fully qualified
                      domain name of the site. For example: www.example.com, hello.example.com.'
                    type: string
                  domainRedirectToFull:
                    description: Sets the redirect naked to full flag. Pass "true"
                      or empty string in the value parameter. true or empty string.
                    type: string
                  domainValidation:
                    description: Sets the domain validation method that will be used
                      to generate an SSL certificate. Options are email, html, cname
                      and dns. email or html or dns or cname.
                    type: string
                  domainVerification:
                    description: The domain verification (e.g. GlobalSign verification,
                      HTML meta tag). Domain verification (e.g. GlobalSign verification).
                    type: string
                  forceSsl:
                    description: Force SSL. This option is only available for sites
                      with manually configured IP/CNAME and for specific accounts.
                      If this value is true, manually set the site to support SSL.
                      This option is only available for sites with manually configured
                      IP/CNAME and for specific accounts.
                    type: string
                  hashSalt:
                    description: Specify the hash salt (masking setting), required
                      if hashing is enabled. Maximum length of 64 characters. Specify
                      the hash salt (masking setting), required if hashing is enabled.
                      Maximum length of 64 characters.
                    type: string
                  hashingEnabled:
                    description: Specify if hashing (masking setting) should be enabled.
                      Specify if hashing (masking setting) should be enabled.
                    type: boolean
                  id:
                    description: Unique identifier in the API for the site.
                    type: string
                  ignoreSsl:
                    description: Sets the ignore SSL flag (if the site is in pending-select-approver
                      state). Pass "true" or empty string in the value parameter.
                      true or empty string.
                    type: string
                  logLevel:
                    description: The log level. Options are full, security, and none.
                      The log level. Options are `full`, `security`, and `none`.
                    type: string
                  logsAccountId:
                    description: Account where logs should be stored. Available only
                      for Enterprise Plan customers that purchased the Logs Integration
                      SKU. Numeric identifier of the account that purchased the logs
                      integration SKU and which collects the logs. If not specified,
                      operation will be performed on the account identified by the
                      authentication parameters. Available only for Enterprise Plan
                      customers that purchased the Logs Integration SKU. Numeric identifier
                      of the account that purchased the logs integration SKU and which
                      collects the logs. If not specified, operation will be performed
                      on the account identified by the authentication parameters.
                    type: string
                  nakedDomainSan:
                    description: 'Use true to add the naked domain SAN to a www site’s
                      SSL certificate. Default value: true Use ''true'' to add the
                      naked domain SAN to a www site’s SSL certificate. Default value:
                      true'
                    type: boolean
                  originalDataCenterId:
                    description: Numeric representation of the data center created
                      with the site. This parameter is deprecated. Please, use data_source_data_center
                      instead. Numeric representation of the data center created with
                      the site.
                    type: number
                  perfClientComplyNoCache:
                    description: Comply with No-Cache and Max-Age directives in client
                      requests. By default, these cache directives are ignored. Resources
                      are dynamically profiled and re-configured to optimize performance.
                      Comply with No-Cache and Max-Age directives in client requests.
                      By default, these cache directives are ignored. Resources are
                      dynamically profiled and re-configured to optimize performance.
                    type: boolean
                  perfClientEnableClientSideCaching:
                    description: Cache content on client browsers or applications.
                      When not enabled, content is cached only on the Imperva proxies.
                      Cache content on client browsers or applications. When not enabled,
                      content is cached only on the Imperva proxies.
                    type: boolean
                  perfClientSendAgeHeader:
                    description: 'Send Cache-Control: max-age and Age headers. Send
                      Cache-Control: max-age and Age headers.'
                    type: boolean
                  perfKeyComplyVary:
                    description: Comply with Vary. Cache resources in accordance with
                      the Vary response header. Comply with Vary. Cache resources
                      in accordance with the Vary response header.
                    type: boolean
                  perfKeyUniteNakedFullCache:
                    description: Use the Same Cache for Full and Naked Domains. For
                      example, use the same cached resource for www.example.com/a
                      and example.com/a. Use the Same Cache for Full and Naked Domains.
                      For example, use the same cached resource for www.example.com/a
                      and example.com/a.
                    type: boolean
                  perfModeHttps:
                    description: The resources that are cached over HTTPS, the general
                      level applies. Options are disabled, dont_include_html, include_html,
                      and include_all_resources. The resources that are cached over
                      HTTPS, the general level applies. Options are `disabled`, `dont_include_html`,
                      `include_html`, and `include_all_resources`.
                    type: string
                  perfModeLevel:
                    description: Caching level. Options are disabled, custom_cache_rules_only,
                      standard, smart, and all_resources. Caching level. Options are
                      `disable`, `standard`, `smart`, and `all_resources`.
                    type: string
                  perfModeTime:
                    description: The time, in seconds, that you set for this option
                      determines how often the cache is refreshed. Relevant for the
                      include_html and include_all_resources levels only. The time,
                      in seconds, that you set for this option determines how often
                      the cache is refreshed. Relevant for the `include_html` and
                      `include_all_resources` levels only.
                    type: number
                  perfResponseCache300X:
                    description: When this option is checked Imperva will cache 301,
                      302, 303, 307, and 308 redirect response headers containing
                      the target URI. When this option is checked Imperva will cache
                      301, 302, 303, 307, and 308 redirect response headers containing
                      the target URI.
                    type: boolean
                  perfResponseCache404Enabled:
                    description: Whether or not to cache 404 responses. Whether or
                      not to cache 404 responses.
                    type: boolean
                  perfResponseCache404Time:
                    description: The time in seconds to cache 404 responses. Value
                      should be divisible by 60. The time in seconds to cache 404
                      responses.
                    type: number
                  perfResponseCacheEmptyResponses:
                    description: Cache responses that don’t have a message body. Cache
                      responses that don’t have a message body.
                    type: boolean
                  perfResponseCacheHttp10Responses:
                    description: Cache HTTP 1.0 type responses that don’t include
                      the Content-Length header or chunking. Cache HTTP 1.0 type responses
                      that don’t include the Content-Length header or chunking.
                    type: boolean
                  perfResponseCacheResponseHeaderMode:
                    description: The working mode for caching response headers. Options
                      are all and custom. The working mode for caching response headers.
                      Options are `all` and `custom`.
                    type: string
                  perfResponseCacheResponseHeaders:
                    description: 'An array of strings representing the response headers
                      to be cached when working in custom mode. If empty, no response
                      headers are cached. For example: ["Access-Control-Allow-Origin","Access-Control-Allow-Methods"].
                      An array of strings representing the response headers to be
                      cached when working in `custom` mode. If empty, no response
                      headers are cached.'
                    items:
                      type: string
                    type: array
                  perfResponseCacheShield:
                    description: Adds an intermediate cache between other Imperva
                      PoPs and your origin servers to protect your servers from redundant
                      requests. Adds an intermediate cache between other Imperva PoPs
                      and your origin servers to protect your servers from redundant
                      requests.
                    type: boolean
                  perfResponseStaleContentMode:
                    description: The working mode for serving stale content. Options
                      are disabled, adaptive, and custom. The working mode for serving
                      stale content. Options are `disabled`, `adaptive`, and `custom`.
                    type: string
                  perfResponseStaleContentTime:
                    description: The time, in seconds, to serve stale content for
                      when working in custom work mode. The time, in seconds, to serve
                      stale content for when working in `custom` work mode.
                    type: number
                  perfResponseTagResponseHeader:
                    description: Tag the response according to the value of this header.
                      Specify which origin response header contains the cache tags
                      in your resources. Tag the response according to the value of
                      this header. Specify which origin response header contains the
                      cache tags in your resources.
                    type: string
                  perfTtlPreferLastModified:
                    description: Prefer 'Last Modified' over eTag. When this option
                      is checked, Imperva prefers using Last Modified values (if available)
                      over eTag values (recommended on multi-server setups). Prefer
                      'Last Modified' over eTag. When this option is checked, Imperva
                      prefers using Last Modified values (if available) over eTag
                      values (recommended on multi-server setups).
                    type: boolean
                  perfTtlUseShortestCaching:
                    description: Use shortest caching duration in case of conflicts.
                      By default, the longest duration is used in case of conflict
                      between caching rules or modes. When this option is checked,
                      Imperva uses the shortest duration in case of conflict. Use
                      shortest caching duration in case of conflicts. By default,
                      the longest duration is used in case of conflict between caching
                      rules or modes. When this option is checked, Imperva uses the
                      shortest duration in case of conflict.
                    type: boolean
                  refId:
                    description: Unique identifier in the API for the site. Customer
                      specific identifier for this operation.
                    type: string
                  removeSsl:
                    description: Sets the remove SSL from site flag. Pass "true" or
                      empty string in the value parameter. true or empty string.
                    type: string
                  restrictedCnameReuse:
                    description: 'parameter is currently not supported. Please do
                      not use/change value. Use this option to allow Imperva to detect
                      and add domains that are using the Imperva-provided CNAME (not
                      recommended). One of: true | false'
                    type: string
                  sealLocation:
                    description: Sets the seal location. Options are api.seal_location.none,
                      api.seal_location.bottom_left, api.seal_location.right_bottom,
                      api.seal_location.left, and api.seal_location.right. api.seal_location.bottom_left
                      | api.seal_location.none | api.seal_location.right_bottom |
                      api.seal_location.right | api.seal_location.left | api.seal_location.bottom_right
                      | api.seal_location.bottom.
                    type: string
                  sendSiteSetupEmails:
                    description: If this value is false, end users will not get emails
                      about the add site process such as DNS instructions and SSL
                      setup. If this value is false, end users will not get emails
                      about the add site process such as DNS instructions and SSL
                      setup.
                    type: string
                  siteCreationDate:
                    description: Numeric representation of the site creation date.
                      Numeric representation of the site creation date.
                    type: number
                  siteIp:
                    description: The web server IP/CNAME. This field should be specified
                      when creating a site and the domain does not yet exist or the
                      domain already points to Imperva Cloud. When specified, its
                      value will be used for adding site only. After site is already
                      created this field will be ignored. To modify site ip, please
                      use resource incapsula_data_centers_configuration instead. Manually
                      set the web server IP/CNAME.
                    type: string
                  wildcardSan:
                    description: 'Use true to add the wildcard SAN or false to add
                      the full domain SAN to the site’s SSL certificate. Default value:
                      true Use ''true'' to add the wildcard SAN or ''false'' to add
                      the full domain SAN to the site’s SSL certificate. Default value:
                      true'
                    type: boolean
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
